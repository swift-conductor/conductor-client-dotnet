/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SwiftConductor.Client.OpenAPIDateConverter;

namespace SwiftConductor.Model
{
    /// <summary>
    /// SkipTaskRequest
    /// </summary>
    [DataContract(Name = "SkipTaskRequest")]
    public partial class SkipTaskRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SkipTaskRequest" /> class.
        /// </summary>
        /// <param name="taskInput">taskInput.</param>
        /// <param name="taskOutput">taskOutput.</param>
        public SkipTaskRequest(Dictionary<string, Object> taskInput = default(Dictionary<string, Object>), Dictionary<string, Object> taskOutput = default(Dictionary<string, Object>))
        {
            this.TaskInput = taskInput;
            this.TaskOutput = taskOutput;
        }

        /// <summary>
        /// Gets or Sets TaskInput
        /// </summary>
        [DataMember(Name = "taskInput", EmitDefaultValue = false)]
        public Dictionary<string, Object> TaskInput { get; set; }

        /// <summary>
        /// Gets or Sets TaskOutput
        /// </summary>
        [DataMember(Name = "taskOutput", EmitDefaultValue = false)]
        public Dictionary<string, Object> TaskOutput { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SkipTaskRequest {\n");
            sb.Append("  TaskInput: ").Append(TaskInput).Append("\n");
            sb.Append("  TaskOutput: ").Append(TaskOutput).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
