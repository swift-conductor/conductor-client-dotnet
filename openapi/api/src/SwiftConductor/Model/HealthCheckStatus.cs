/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SwiftConductor.Client.OpenAPIDateConverter;

namespace SwiftConductor.Model
{
    /// <summary>
    /// HealthCheckStatus
    /// </summary>
    [DataContract(Name = "HealthCheckStatus")]
    public partial class HealthCheckStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HealthCheckStatus" /> class.
        /// </summary>
        /// <param name="healthResults">healthResults.</param>
        /// <param name="suppressedHealthResults">suppressedHealthResults.</param>
        /// <param name="healthy">healthy.</param>
        public HealthCheckStatus(List<Health> healthResults = default(List<Health>), List<Health> suppressedHealthResults = default(List<Health>), bool healthy = default(bool))
        {
            this.HealthResults = healthResults;
            this.SuppressedHealthResults = suppressedHealthResults;
            this.Healthy = healthy;
        }

        /// <summary>
        /// Gets or Sets HealthResults
        /// </summary>
        [DataMember(Name = "healthResults", EmitDefaultValue = false)]
        public List<Health> HealthResults { get; set; }

        /// <summary>
        /// Gets or Sets SuppressedHealthResults
        /// </summary>
        [DataMember(Name = "suppressedHealthResults", EmitDefaultValue = false)]
        public List<Health> SuppressedHealthResults { get; set; }

        /// <summary>
        /// Gets or Sets Healthy
        /// </summary>
        [DataMember(Name = "healthy", EmitDefaultValue = true)]
        public bool Healthy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HealthCheckStatus {\n");
            sb.Append("  HealthResults: ").Append(HealthResults).Append("\n");
            sb.Append("  SuppressedHealthResults: ").Append(SuppressedHealthResults).Append("\n");
            sb.Append("  Healthy: ").Append(Healthy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
