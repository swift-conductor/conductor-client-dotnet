/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SwiftConductor.Model;
using SwiftConductor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SwiftConductor.Test.Model
{
    /// <summary>
    ///  Class for testing TaskResult
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TaskResultTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TaskResult
        //private TaskResult instance;

        public TaskResultTests()
        {
            // TODO uncomment below to create an instance of TaskResult
            //instance = new TaskResult();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TaskResult
        /// </summary>
        [Fact]
        public void TaskResultInstanceTest()
        {
            // TODO uncomment below to test "IsType" TaskResult
            //Assert.IsType<TaskResult>(instance);
        }

        /// <summary>
        /// Test the property 'WorkflowInstanceId'
        /// </summary>
        [Fact]
        public void WorkflowInstanceIdTest()
        {
            // TODO unit test for the property 'WorkflowInstanceId'
        }

        /// <summary>
        /// Test the property 'TaskId'
        /// </summary>
        [Fact]
        public void TaskIdTest()
        {
            // TODO unit test for the property 'TaskId'
        }

        /// <summary>
        /// Test the property 'ReasonForIncompletion'
        /// </summary>
        [Fact]
        public void ReasonForIncompletionTest()
        {
            // TODO unit test for the property 'ReasonForIncompletion'
        }

        /// <summary>
        /// Test the property 'CallbackAfterSeconds'
        /// </summary>
        [Fact]
        public void CallbackAfterSecondsTest()
        {
            // TODO unit test for the property 'CallbackAfterSeconds'
        }

        /// <summary>
        /// Test the property 'WorkerId'
        /// </summary>
        [Fact]
        public void WorkerIdTest()
        {
            // TODO unit test for the property 'WorkerId'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'OutputData'
        /// </summary>
        [Fact]
        public void OutputDataTest()
        {
            // TODO unit test for the property 'OutputData'
        }

        /// <summary>
        /// Test the property 'Logs'
        /// </summary>
        [Fact]
        public void LogsTest()
        {
            // TODO unit test for the property 'Logs'
        }

        /// <summary>
        /// Test the property 'ExternalOutputPayloadStoragePath'
        /// </summary>
        [Fact]
        public void ExternalOutputPayloadStoragePathTest()
        {
            // TODO unit test for the property 'ExternalOutputPayloadStoragePath'
        }

        /// <summary>
        /// Test the property 'SubWorkflowId'
        /// </summary>
        [Fact]
        public void SubWorkflowIdTest()
        {
            // TODO unit test for the property 'SubWorkflowId'
        }

        /// <summary>
        /// Test the property 'ExtendLease'
        /// </summary>
        [Fact]
        public void ExtendLeaseTest()
        {
            // TODO unit test for the property 'ExtendLease'
        }
    }
}
