/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SwiftConductor.Model;
using SwiftConductor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SwiftConductor.Test.Model
{
    /// <summary>
    ///  Class for testing WorkflowTask
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WorkflowTaskTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WorkflowTask
        //private WorkflowTask instance;

        public WorkflowTaskTests()
        {
            // TODO uncomment below to create an instance of WorkflowTask
            //instance = new WorkflowTask();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkflowTask
        /// </summary>
        [Fact]
        public void WorkflowTaskInstanceTest()
        {
            // TODO uncomment below to test "IsType" WorkflowTask
            //Assert.IsType<WorkflowTask>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'TaskReferenceName'
        /// </summary>
        [Fact]
        public void TaskReferenceNameTest()
        {
            // TODO unit test for the property 'TaskReferenceName'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'InputParameters'
        /// </summary>
        [Fact]
        public void InputParametersTest()
        {
            // TODO unit test for the property 'InputParameters'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'DynamicTaskNameParam'
        /// </summary>
        [Fact]
        public void DynamicTaskNameParamTest()
        {
            // TODO unit test for the property 'DynamicTaskNameParam'
        }

        /// <summary>
        /// Test the property 'CaseValueParam'
        /// </summary>
        [Fact]
        public void CaseValueParamTest()
        {
            // TODO unit test for the property 'CaseValueParam'
        }

        /// <summary>
        /// Test the property 'CaseExpression'
        /// </summary>
        [Fact]
        public void CaseExpressionTest()
        {
            // TODO unit test for the property 'CaseExpression'
        }

        /// <summary>
        /// Test the property 'ScriptExpression'
        /// </summary>
        [Fact]
        public void ScriptExpressionTest()
        {
            // TODO unit test for the property 'ScriptExpression'
        }

        /// <summary>
        /// Test the property 'DecisionCases'
        /// </summary>
        [Fact]
        public void DecisionCasesTest()
        {
            // TODO unit test for the property 'DecisionCases'
        }

        /// <summary>
        /// Test the property 'DynamicForkJoinTasksParam'
        /// </summary>
        [Fact]
        public void DynamicForkJoinTasksParamTest()
        {
            // TODO unit test for the property 'DynamicForkJoinTasksParam'
        }

        /// <summary>
        /// Test the property 'DynamicForkTasksParam'
        /// </summary>
        [Fact]
        public void DynamicForkTasksParamTest()
        {
            // TODO unit test for the property 'DynamicForkTasksParam'
        }

        /// <summary>
        /// Test the property 'DynamicForkTasksInputParamName'
        /// </summary>
        [Fact]
        public void DynamicForkTasksInputParamNameTest()
        {
            // TODO unit test for the property 'DynamicForkTasksInputParamName'
        }

        /// <summary>
        /// Test the property 'DefaultCase'
        /// </summary>
        [Fact]
        public void DefaultCaseTest()
        {
            // TODO unit test for the property 'DefaultCase'
        }

        /// <summary>
        /// Test the property 'ForkTasks'
        /// </summary>
        [Fact]
        public void ForkTasksTest()
        {
            // TODO unit test for the property 'ForkTasks'
        }

        /// <summary>
        /// Test the property 'StartDelay'
        /// </summary>
        [Fact]
        public void StartDelayTest()
        {
            // TODO unit test for the property 'StartDelay'
        }

        /// <summary>
        /// Test the property 'SubWorkflowParam'
        /// </summary>
        [Fact]
        public void SubWorkflowParamTest()
        {
            // TODO unit test for the property 'SubWorkflowParam'
        }

        /// <summary>
        /// Test the property 'JoinOn'
        /// </summary>
        [Fact]
        public void JoinOnTest()
        {
            // TODO unit test for the property 'JoinOn'
        }

        /// <summary>
        /// Test the property 'Sink'
        /// </summary>
        [Fact]
        public void SinkTest()
        {
            // TODO unit test for the property 'Sink'
        }

        /// <summary>
        /// Test the property 'Optional'
        /// </summary>
        [Fact]
        public void OptionalTest()
        {
            // TODO unit test for the property 'Optional'
        }

        /// <summary>
        /// Test the property 'TaskDefinition'
        /// </summary>
        [Fact]
        public void TaskDefinitionTest()
        {
            // TODO unit test for the property 'TaskDefinition'
        }

        /// <summary>
        /// Test the property 'RateLimited'
        /// </summary>
        [Fact]
        public void RateLimitedTest()
        {
            // TODO unit test for the property 'RateLimited'
        }

        /// <summary>
        /// Test the property 'DefaultExclusiveJoinTask'
        /// </summary>
        [Fact]
        public void DefaultExclusiveJoinTaskTest()
        {
            // TODO unit test for the property 'DefaultExclusiveJoinTask'
        }

        /// <summary>
        /// Test the property 'AsyncComplete'
        /// </summary>
        [Fact]
        public void AsyncCompleteTest()
        {
            // TODO unit test for the property 'AsyncComplete'
        }

        /// <summary>
        /// Test the property 'LoopCondition'
        /// </summary>
        [Fact]
        public void LoopConditionTest()
        {
            // TODO unit test for the property 'LoopCondition'
        }

        /// <summary>
        /// Test the property 'LoopOver'
        /// </summary>
        [Fact]
        public void LoopOverTest()
        {
            // TODO unit test for the property 'LoopOver'
        }

        /// <summary>
        /// Test the property 'RetryCount'
        /// </summary>
        [Fact]
        public void RetryCountTest()
        {
            // TODO unit test for the property 'RetryCount'
        }

        /// <summary>
        /// Test the property 'EvaluatorType'
        /// </summary>
        [Fact]
        public void EvaluatorTypeTest()
        {
            // TODO unit test for the property 'EvaluatorType'
        }

        /// <summary>
        /// Test the property 'Expression'
        /// </summary>
        [Fact]
        public void ExpressionTest()
        {
            // TODO unit test for the property 'Expression'
        }

        /// <summary>
        /// Test the property 'WorkflowTaskType'
        /// </summary>
        [Fact]
        public void WorkflowTaskTypeTest()
        {
            // TODO unit test for the property 'WorkflowTaskType'
        }
    }
}
