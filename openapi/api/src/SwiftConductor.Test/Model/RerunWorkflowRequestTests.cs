/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SwiftConductor.Model;
using SwiftConductor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SwiftConductor.Test.Model
{
    /// <summary>
    ///  Class for testing RerunWorkflowRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RerunWorkflowRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RerunWorkflowRequest
        //private RerunWorkflowRequest instance;

        public RerunWorkflowRequestTests()
        {
            // TODO uncomment below to create an instance of RerunWorkflowRequest
            //instance = new RerunWorkflowRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RerunWorkflowRequest
        /// </summary>
        [Fact]
        public void RerunWorkflowRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" RerunWorkflowRequest
            //Assert.IsType<RerunWorkflowRequest>(instance);
        }

        /// <summary>
        /// Test the property 'ReRunFromWorkflowId'
        /// </summary>
        [Fact]
        public void ReRunFromWorkflowIdTest()
        {
            // TODO unit test for the property 'ReRunFromWorkflowId'
        }

        /// <summary>
        /// Test the property 'WorkflowInput'
        /// </summary>
        [Fact]
        public void WorkflowInputTest()
        {
            // TODO unit test for the property 'WorkflowInput'
        }

        /// <summary>
        /// Test the property 'ReRunFromTaskId'
        /// </summary>
        [Fact]
        public void ReRunFromTaskIdTest()
        {
            // TODO unit test for the property 'ReRunFromTaskId'
        }

        /// <summary>
        /// Test the property 'TaskInput'
        /// </summary>
        [Fact]
        public void TaskInputTest()
        {
            // TODO unit test for the property 'TaskInput'
        }

        /// <summary>
        /// Test the property 'CorrelationId'
        /// </summary>
        [Fact]
        public void CorrelationIdTest()
        {
            // TODO unit test for the property 'CorrelationId'
        }
    }
}
