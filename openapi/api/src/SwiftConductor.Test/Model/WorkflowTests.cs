/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SwiftConductor.Model;
using SwiftConductor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SwiftConductor.Test.Model
{
    /// <summary>
    ///  Class for testing Workflow
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WorkflowTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Workflow
        //private Workflow instance;

        public WorkflowTests()
        {
            // TODO uncomment below to create an instance of Workflow
            //instance = new Workflow();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Workflow
        /// </summary>
        [Fact]
        public void WorkflowInstanceTest()
        {
            // TODO uncomment below to test "IsType" Workflow
            //Assert.IsType<Workflow>(instance);
        }

        /// <summary>
        /// Test the property 'OwnerApp'
        /// </summary>
        [Fact]
        public void OwnerAppTest()
        {
            // TODO unit test for the property 'OwnerApp'
        }

        /// <summary>
        /// Test the property 'CreateTime'
        /// </summary>
        [Fact]
        public void CreateTimeTest()
        {
            // TODO unit test for the property 'CreateTime'
        }

        /// <summary>
        /// Test the property 'UpdateTime'
        /// </summary>
        [Fact]
        public void UpdateTimeTest()
        {
            // TODO unit test for the property 'UpdateTime'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'UpdatedBy'
        /// </summary>
        [Fact]
        public void UpdatedByTest()
        {
            // TODO unit test for the property 'UpdatedBy'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }

        /// <summary>
        /// Test the property 'WorkflowId'
        /// </summary>
        [Fact]
        public void WorkflowIdTest()
        {
            // TODO unit test for the property 'WorkflowId'
        }

        /// <summary>
        /// Test the property 'ParentWorkflowId'
        /// </summary>
        [Fact]
        public void ParentWorkflowIdTest()
        {
            // TODO unit test for the property 'ParentWorkflowId'
        }

        /// <summary>
        /// Test the property 'ParentWorkflowTaskId'
        /// </summary>
        [Fact]
        public void ParentWorkflowTaskIdTest()
        {
            // TODO unit test for the property 'ParentWorkflowTaskId'
        }

        /// <summary>
        /// Test the property 'Tasks'
        /// </summary>
        [Fact]
        public void TasksTest()
        {
            // TODO unit test for the property 'Tasks'
        }

        /// <summary>
        /// Test the property 'Input'
        /// </summary>
        [Fact]
        public void InputTest()
        {
            // TODO unit test for the property 'Input'
        }

        /// <summary>
        /// Test the property 'Output'
        /// </summary>
        [Fact]
        public void OutputTest()
        {
            // TODO unit test for the property 'Output'
        }

        /// <summary>
        /// Test the property 'CorrelationId'
        /// </summary>
        [Fact]
        public void CorrelationIdTest()
        {
            // TODO unit test for the property 'CorrelationId'
        }

        /// <summary>
        /// Test the property 'ReRunFromWorkflowId'
        /// </summary>
        [Fact]
        public void ReRunFromWorkflowIdTest()
        {
            // TODO unit test for the property 'ReRunFromWorkflowId'
        }

        /// <summary>
        /// Test the property 'ReasonForIncompletion'
        /// </summary>
        [Fact]
        public void ReasonForIncompletionTest()
        {
            // TODO unit test for the property 'ReasonForIncompletion'
        }

        /// <summary>
        /// Test the property 'VarEvent'
        /// </summary>
        [Fact]
        public void VarEventTest()
        {
            // TODO unit test for the property 'VarEvent'
        }

        /// <summary>
        /// Test the property 'TaskToDomain'
        /// </summary>
        [Fact]
        public void TaskToDomainTest()
        {
            // TODO unit test for the property 'TaskToDomain'
        }

        /// <summary>
        /// Test the property 'FailedReferenceTaskNames'
        /// </summary>
        [Fact]
        public void FailedReferenceTaskNamesTest()
        {
            // TODO unit test for the property 'FailedReferenceTaskNames'
        }

        /// <summary>
        /// Test the property 'WorkflowDefinition'
        /// </summary>
        [Fact]
        public void WorkflowDefinitionTest()
        {
            // TODO unit test for the property 'WorkflowDefinition'
        }

        /// <summary>
        /// Test the property 'ExternalInputPayloadStoragePath'
        /// </summary>
        [Fact]
        public void ExternalInputPayloadStoragePathTest()
        {
            // TODO unit test for the property 'ExternalInputPayloadStoragePath'
        }

        /// <summary>
        /// Test the property 'ExternalOutputPayloadStoragePath'
        /// </summary>
        [Fact]
        public void ExternalOutputPayloadStoragePathTest()
        {
            // TODO unit test for the property 'ExternalOutputPayloadStoragePath'
        }

        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }

        /// <summary>
        /// Test the property 'Variables'
        /// </summary>
        [Fact]
        public void VariablesTest()
        {
            // TODO unit test for the property 'Variables'
        }

        /// <summary>
        /// Test the property 'LastRetriedTime'
        /// </summary>
        [Fact]
        public void LastRetriedTimeTest()
        {
            // TODO unit test for the property 'LastRetriedTime'
        }

        /// <summary>
        /// Test the property 'FailedTaskNames'
        /// </summary>
        [Fact]
        public void FailedTaskNamesTest()
        {
            // TODO unit test for the property 'FailedTaskNames'
        }

        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }

        /// <summary>
        /// Test the property 'WorkflowName'
        /// </summary>
        [Fact]
        public void WorkflowNameTest()
        {
            // TODO unit test for the property 'WorkflowName'
        }

        /// <summary>
        /// Test the property 'WorkflowVersion'
        /// </summary>
        [Fact]
        public void WorkflowVersionTest()
        {
            // TODO unit test for the property 'WorkflowVersion'
        }
    }
}
