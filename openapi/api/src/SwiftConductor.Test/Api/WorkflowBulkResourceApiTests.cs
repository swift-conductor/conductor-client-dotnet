/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SwiftConductor.Client;
using SwiftConductor.Api;
// uncomment below to import models
//using SwiftConductor.Model;

namespace SwiftConductor.Test.Api
{
    /// <summary>
    ///  Class for testing WorkflowBulkResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WorkflowBulkResourceApiTests : IDisposable
    {
        private WorkflowBulkResourceApi instance;

        public WorkflowBulkResourceApiTests()
        {
            instance = new WorkflowBulkResourceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkflowBulkResourceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WorkflowBulkResourceApi
            //Assert.IsType<WorkflowBulkResourceApi>(instance);
        }

        /// <summary>
        /// Test PauseWorkflow1
        /// </summary>
        [Fact]
        public void PauseWorkflow1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.PauseWorkflow1(requestBody);
            //Assert.IsType<BulkResponse>(response);
        }

        /// <summary>
        /// Test Restart1
        /// </summary>
        [Fact]
        public void Restart1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //bool? useLatestDefinitions = null;
            //var response = instance.Restart1(requestBody, useLatestDefinitions);
            //Assert.IsType<BulkResponse>(response);
        }

        /// <summary>
        /// Test ResumeWorkflow1
        /// </summary>
        [Fact]
        public void ResumeWorkflow1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.ResumeWorkflow1(requestBody);
            //Assert.IsType<BulkResponse>(response);
        }

        /// <summary>
        /// Test Retry1
        /// </summary>
        [Fact]
        public void Retry1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.Retry1(requestBody);
            //Assert.IsType<BulkResponse>(response);
        }

        /// <summary>
        /// Test Terminate
        /// </summary>
        [Fact]
        public void TerminateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //string? reason = null;
            //var response = instance.Terminate(requestBody, reason);
            //Assert.IsType<BulkResponse>(response);
        }
    }
}
